package com.belatrix.habilidadessociolaborales.datamodel;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig questionDaoConfig;
    private final DaoConfig scenarioDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig sessionDaoConfig;
    private final DaoConfig logDaoConfig;

    private final QuestionDao questionDao;
    private final ScenarioDao scenarioDao;
    private final UserDao userDao;
    private final SessionDao sessionDao;
    private final LogDao logDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        scenarioDaoConfig = daoConfigMap.get(ScenarioDao.class).clone();
        scenarioDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        sessionDaoConfig = daoConfigMap.get(SessionDao.class).clone();
        sessionDaoConfig.initIdentityScope(type);

        logDaoConfig = daoConfigMap.get(LogDao.class).clone();
        logDaoConfig.initIdentityScope(type);

        questionDao = new QuestionDao(questionDaoConfig, this);
        scenarioDao = new ScenarioDao(scenarioDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        sessionDao = new SessionDao(sessionDaoConfig, this);
        logDao = new LogDao(logDaoConfig, this);

        registerDao(Question.class, questionDao);
        registerDao(Scenario.class, scenarioDao);
        registerDao(User.class, userDao);
        registerDao(Session.class, sessionDao);
        registerDao(Log.class, logDao);
    }
    
    public void clear() {
        questionDaoConfig.getIdentityScope().clear();
        scenarioDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        sessionDaoConfig.getIdentityScope().clear();
        logDaoConfig.getIdentityScope().clear();
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public ScenarioDao getScenarioDao() {
        return scenarioDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public SessionDao getSessionDao() {
        return sessionDao;
    }

    public LogDao getLogDao() {
        return logDao;
    }

}
